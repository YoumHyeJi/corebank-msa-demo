version: '3.8'

services:

  gateway:
    container_name: 'gateway'
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - corebank-network

  orchestrator:
    container_name: 'orchestrator'
    build:
      context: ./orchestrator
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    networks:
      - corebank-network
    environment:
      - KAFKA_TOPIC_SAGA_DEPOSIT_TRANSACTION-INSERT_INBOX_EVENTS=transaction-insert.outbox.events
      - KAFKA_TOPIC_SAGA_DEPOSIT_ACCOUNT-BALANCE-UPDATE_INBOX_EVENTS=account-balance-update.outbox.events

  customer:
    container_name: 'customer'
    build:
      context: ./customer
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    networks:
      - corebank-network

  account:
    container_name: 'account'
    build:
      context: ./account
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    networks:
      - corebank-network

  banking:
    container_name: 'banking'
    build:
      context: ./banking
      dockerfile: Dockerfile
    ports:
      - "8084:8080"
    networks:
      - corebank-network

  kafka0:
    image: bitnami/kafka:latest
    container_name: 'kafka0'
    ports:
      - '10000:9094'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka0:9093,1@kafka1:9093,2@kafka2:9093
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka0:9092,EXTERNAL://127.0.0.1:10000
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      # Clustering
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=2
    volumes:
      - kafka-data0:/bitnami/kafka
    networks:
      - corebank-network

  kafka1:
    image: bitnami/kafka:latest
    container_name: 'kafka1'
    ports:
      - '10001:9094'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka0:9093,1@kafka1:9093,2@kafka2:9093
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092,EXTERNAL://127.0.0.1:10001
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      # Clustering
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=2
    volumes:
      - kafka-data1:/bitnami/kafka
    networks:
      - corebank-network

  kafka2:
    image: bitnami/kafka:latest
    container_name: 'kafka2'
    ports:
      - '10002:9094'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka0:9093,1@kafka1:9093,2@kafka2:9093
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092,EXTERNAL://127.0.0.1:10002
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      # Clustering
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=2
    volumes:
      - kafka-data2:/bitnami/kafka
    networks:
      - corebank-network

  KafkaWebUiService:
    image: provectuslabs/kafka-ui:latest
    restart: unless-stopped
    container_name: KafkaWebUiContainer
    ports:
      - '8085:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=Local-Kraft-Cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka0:9092,kafka1:9092,kafka2:9092
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED=true
      - KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED=true
      #- KAFKA_CLUSTERS_0_METRICS_PORT=9999
    networks:
      - corebank-network

  mysql-orchestrator:
    image: mysql:8.0.36
    container_name: mysql-orchestrator
    ports:
      - "3320:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orchestrator
      MYSQL_USER: debezium
      MYSQL_PASSWORD: debezium
    volumes:
      - mysql-orchestrator-data:/var/lib/mysql
    networks:
      - corebank-network

  mysql-customer:
    image: mysql:8.0.36
    container_name: mysql-customer
    ports:
      - "3321:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: customer
      MYSQL_USER: debezium
      MYSQL_PASSWORD: debezium
    volumes:
      - mysql-customer-data:/var/lib/mysql
    networks:
      - corebank-network

  mysql-account:
    image: mysql:8.0.36
    container_name: mysql-account
    ports:
      - "3322:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: account
      MYSQL_USER: debezium
      MYSQL_PASSWORD: debezium
    volumes:
      - mysql-account-data:/var/lib/mysql
    networks:
      - corebank-network

  mysql-banking:
    image: mysql:8.0.36
    container_name: mysql-banking
    ports:
      - "3323:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: banking
      MYSQL_USER: debezium
      MYSQL_PASSWORD: debezium
    volumes:
      - mysql-banking-data:/var/lib/mysql
    networks:
      - corebank-network

  debezium:
    image: debezium/connect:latest
    container_name: debezium
    ports:
      - "8090:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka0:9092,kafka1:9092,kafka2:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
    depends_on:
      - mysql-orchestrator
      - mysql-customer
      - mysql-account
      - mysql-banking
      - kafka0
      - kafka1
      - kafka2
    volumes:
      - debezium-log:/kafka/logs
      - debezium-config:/kafka/config
      - debezium-data:/kafka/data
    networks:
      - corebank-network

networks:
  corebank-network:
    driver: bridge

volumes:
  kafka-data0:
    driver: local
  kafka-data1:
    driver: local
  kafka-data2:
    driver: local
  mysql-orchestrator-data:
    driver: local
  mysql-customer-data:
    driver: local
  mysql-account-data:
    driver: local
  mysql-banking-data:
    driver: local
  debezium-log:
    driver: local
  debezium-config:
    driver: local
  debezium-data:
    driver: local